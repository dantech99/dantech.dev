[["Map",1,2,9,10,24,25],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.1","content-config-digest","6c2dd8e26ce44e67","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":true,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false}}","articles",["Map",11,12],"ecmascript-versiones",{"id":11,"data":13,"body":19,"filePath":20,"digest":21,"legacyId":22,"deferredRender":23},{"title":14,"author":15,"img":16,"description":17,"date":18},"¿Qué Trajo Cada Versión de ECMAScript? Un Viaje Cronológico","Danilo A. Macea","/img/articles/cronologia-es.png","Vamos a explorar cada una de las versiones de ecmascript hasta nuestros días, conoceremos cada uno de los cambios que se introdujeron y como aportaron al mejoramiento del lenguaje de programacion mas usado hoy dia JavaScript","__DATE__","## Un viaje a Traves del tiempo: La evolución de ECMAScript que dio Forma a JavaScript\n\n### Introducción\n\nJavaScript es uno de los lenguajes de programación mas utilizados en el desarrollo web, fundamental para crear interfaces de usuario interactivas y dinámicas. Creado en 1995 por brendan Eich, paso por varios nombres (mocha, luego LiveScript) antes de establecerse como JavaScript.\n\nPero, ¿que es ECMAScrip? Es el estándar sobre el cual se basa JavaScript. Desarrollado y mantenido por la organización de estándares ECMA International, su designación oficial es ECMA-262. Cada nueva version de este estándar influye directamente en la evolución del lenguaje. En este articulo, exploraremos la cronología de ECMAScript y las actualizaciones clave que han mejorado JavaScript a lo largo de los años.\n\n---\n\n### ECMAScript 1 (1997)\n\nLa primera edición del estándar conocida como ES1, se lanzo en 1997. Se baso en el lenguaje JavaScript existente e incluyo sus características fundamentales como **variables, funciones y sentencias de control de flujo básicas.**\n\n```jsx\n// Ejemplo de una varaible en ES1\nvar nombre = \"Dantech.dev\";\nconsole.log(nombre); // Salida: \"Dantech.dev\"\n\n//Ejemplo de una funcion en ES1\nfunction sumar(a,b) {\n\treturn a + b;\n}\nconsole.log(sumar(1,2)); // salida: 3\n```\n\n### ECMAScript 2 (1998) y ECMAScript 3 (1999)\n\nLa segunda version, ES2, fue una actualización menor lanzada en 1998 que se centro principalmente en hacer el estándar mas consistente.\n\nUn años después, en 1999, llego ES3, que introdujo varias características importantes que hoy son fundamentales, como las expresiones regulares, las declaraciones  `try-catch` para el manejo de errores y un manejo de cadenas de texto mejorado.\n\n```jsx\nvar texto = \"Hola, mundo!\";\nvar regex = /hola/;\nconsole.log(regex.test(texto)); // salida: true\n\n//Ejemplo de una declaracion try-catch en ES3\ntry {\n\tvar x = y + 1 // 'y' no esta definida, lo que causara un error\n} catch (error) {\n\tconsole.log(error) // Salida: ReferenceError: y es not defined\n}\n```\n\n### ECMAScript 4 (Nunca lanzado)\n\nSe planeo una cuarta version con cambios muy significativos, como clases, interfaces y espacios de nombres (namespaces). sin embargo, la propuesta genero una gran oposición y su desarrollo fue finalmente abandonado, por lo que ES4 nunca vio la luz.\n\n### ECMAScript 5 (2009)\n\nTras una parga pausa, ES5 se lanzo en 2009. Esta version introdujo mejoras cruciales como:\n\n- Modo estricto `“use strict”`, una forma de optar por una variante restringida de JavaScript para una escritura de código mas segura\n- Soporte nativo para JSON, permitiendo analizar y convertir datos en este formato de manera sencilla\n- Mejora en la manipulación de arrays, con nuevos métodos como `indexOf()` y `map()`\n\n```jsx\n// Ejemplo de modo estricto en ES5\nfunction sumar(a, b){\n\t\"use strict\";\n\treturn a + b;\n}\nconsole.log(sumar(1,2)); // salida: 3\n\n// ejemplo de soporte para JSON en ES5\nvar jsonTexto = '{\"nombre\":\"dantech\", \"edad\":26}';\nvar jsonData = JSON.parce(jsonTexto);\n\n// Ejemplo de manipulacion de arrays mejorada en ES5\nvar numeros = [1,2,3,4,5];\nconsole.log(numeros.indexOf(3)) // Salida: 2\nconsole.log(numeros.map(function(numero){\n\treturn numero * 2;\n})); // salida: [2,4,6,8,10]\n```\n\nEn 2011, se lanzo ES5.1 una actualización menor enfocada en corregir errores y mejorar la consistencia del estándar.\n\n### ECMAScript 6 (2015) - La gran Renovación\n\nConocido popularmente como ES6, su lanzamiento en 2015 marco la mayor actualización del lenguaje hasta la fecha. Introdujo una sintaxis mas moderna y potente con características como:\n\n- Arrow Functions\n- template literals para una mejor interpolación de cadenas\n- clases, que ofrecen una sintaxis mas clara para la programación orientada a objetos\n\n```jsx\n// Ejemplo de let y const en ES6\nlet nombre = \"Dantech.dev\"\nconst edad = 26\n\n// Ejemplo de function de flecha o arrow function\nlet sumar = (a, b) => a + b;\nconsole.log(sumar(1, 2)); // Salida: 3\n\n// Ejemplo de plantillas literales en ES6\nlet mensaje = `¡Hola, ${nombre}!`;\nconsole.log(mensaje); // Salida: \"¡Hola, John Doe!\"\n\n// Ejemplo de una clase en ES6\nclass Persona {\n  constructor(nombre, edad) {\n    this.nombre = nombre;\n    this.edad = edad;\n  }\n  saludar() {\n    return `¡Hola, ${this.nombre}!`;\n  }\n}\nlet john = new Persona(\"John Doe\", 30);\nconsole.log(john.saludar()); // Salida: \"¡Hola, John Doe!\"\n```\n\nOtras características importantes de ES6 incluyen parámetros por defecto, desestructuración, y nuevas estructuras de datos como `Map` y `Set`\n\n### ECMAScript 2017 (ES8)\n\nEsta version de 2017 trajo consigo mejorar importantes para la programación asíncrona y a manipulación de objetos.\n\n- `async/await`: Una sintaxis mas limpia para trabajar promesas\n- `object.values()` y `object.entries()`: Método para obtener los valores o los pares [clave, valor] de un objeto.\n- Relleno de cadenas `(padStart` y `padEnd`)\n\n```jsx\n// Ejemplo de Object.values() y Object.entries() en ES8\nlet persona = { nombre: \"John Doe\", edad: 30 };\nconsole.log(Object.values(persona)); // Salida: [\"John Doe\", 30]\nconsole.log(Object.entries(persona)); // Salida: [[\"nombre\", \"John Doe\"], [\"age\", 30]]\n\n// Ejemplo de relleno de cadenas en ES8\nlet texto = \"Hola\";\nconsole.log(texto.padStart(10, '-')); // Salida: \"-----Hola\"\nconsole.log(texto.padEnd(10, '-'));   // Salida: \"Hola-----\"\n```","src/content/articles/EcmaScript-y-sus-versiones.mdx","231bd39b4bfc3f68","EcmaScript-y-sus-versiones.mdx",true,"projects",["Map",26,27,61,62,83,84,101,102],"flashgas",{"id":26,"data":28,"filePath":58,"digest":59,"legacyId":60,"deferredRender":23},{"title":29,"description":30,"img":31,"date":32,"links":33,"tags":42,"tech":46,"author":15,"authorImg":56,"authorUrl":57},"Flashgas","Aplicacion web que conecta a usuarios con minoristas para la compra y recarga de gas","/img/projects/flashgas.jpg",["Date","2025-02-15T00:00:00.000Z"],[34,38],{"name":35,"url":36,"icon":37},"Preview","https://app.flashgas.com/","Link",{"name":39,"url":40,"icon":41},"Code","https://github.com/Flash-Gas/user-panel","CodeSvg",[43,44,45],"web","freelance","startup",[47,50,53],{"name":48,"icon":49},"Next.js","Nextjs",{"name":51,"icon":52},"React.js","React",{"name":54,"icon":55},"Tailwind CSS","Tailwind","https://i.postimg.cc/NFWHSKHV/ES-ILUSTRATION.jpg","https://www.recyclingbikes.co/","src/content/projects/flashgas.mdx","407fd7bf5dc7b675","flashgas.mdx","gesccol",{"id":61,"data":63,"filePath":80,"digest":81,"legacyId":82,"deferredRender":23},{"title":64,"description":65,"img":66,"date":67,"links":68,"tags":71,"tech":73,"author":15,"authorImg":56,"authorUrl":57},"Gesccol E.I.C.E","Sitio web del gestor catastral de Sahagún, Córdoba, para la difusión de información pública a la ciudadanía sobre el catastro multiproposito.","/img/projects/gesccol.jpg",["Date","2025-02-15T00:00:00.000Z"],[69],{"name":39,"url":70,"icon":41},"https://github.com/dantech99/Gesccol-Web-App",[43,44,72],"empresa",[74,75,77],{"name":54,"icon":55},{"name":76,"icon":76},"Laravel",{"name":78,"icon":79},"PHP","Php","src/content/projects/gesccol.mdx","db107a88a27aaea7","gesccol.mdx","nutriasoft",{"id":83,"data":85,"filePath":98,"digest":99,"legacyId":100,"deferredRender":23},{"title":86,"description":87,"img":88,"date":89,"links":90,"tags":95,"tech":96,"author":15,"authorImg":56,"authorUrl":57},"NutriaSoft.dev","Landing page para la startup nutriasoft que ofrece servicios software","/img/projects/nutriasoft.jpg",["Date","2025-02-15T00:00:00.000Z"],[91,93],{"name":35,"url":92,"icon":37},"https://nutriasoft.dev/",{"name":39,"url":94,"icon":41},"https://github.com/NutriaSoft/nutriasoft.dev",[43,44,45],[97],{"name":48,"icon":49},"src/content/projects/nutriasoft.mdx","560ffb810187a08a","nutriasoft.mdx","recycling-bikes",{"id":101,"data":103,"filePath":117,"digest":118,"legacyId":119,"deferredRender":23},{"title":104,"description":105,"img":106,"date":107,"links":108,"tags":112,"tech":113,"author":15,"authorImg":56,"authorUrl":57},"Recycling Bikes","Aplicación web de comercio electrónico para la renta y compra de bicicletas usadas.","/img/projects/recycling.jpg",["Date","2025-02-15T00:00:00.000Z"],[109,110],{"name":35,"url":57,"icon":37},{"name":39,"url":111,"icon":41},"https://github.com/Recycling-Bikes/recycling-web",[43,44,45],[114,115,116],{"name":48,"icon":49},{"name":54,"icon":55},{"name":51,"icon":52},"src/content/projects/recycling-bikes.mdx","cbd86b65b0047a64","recycling-bikes.mdx"]